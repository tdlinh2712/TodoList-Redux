{"version":3,"sources":["reducer/index.js","reducer/reducer.js","store/index.js","config/firebase.js","actions/action.js","components/Todo.js","components/AddTodoForm.js","components/App.js","serviceWorker.js","index.js"],"names":["combineReducers","reducer","state","notCompleted","completed","userId","v4","action","type","newTodo","id","payload","todoID","content","todoContent","newNotCompletedList","index","listToDelete","afterDeleteTodo","map","todo","i","splice","listToRemove","listToAdd","ind","newCompleteStatus","editIndex","completeStatus","newContent","listToEdit","console","log","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","useStyles","makeStyles","cardContainer","margin","position","maxWidth","wordWrap","EditIcon","right","bottom","opacity","DeleteIcon","CompleteIcon","color","Content","marginTop","marginBottom","CompletedContent","textDecoration","EditForm","resize","overflow","outline","border","EditFormContainer","width","EditFormCard","minHeight","padding","SaveButton","connect","dispatch","classes","useState","isEditing","setIsEditing","todoText","setText","handleDeleteTodo","ref","remove","deleteTodoFromFirebase","deleteTodo","handleSetCompleted","from","to","oldRef","newRef","once","snap","set","val","error","changeCompleteStatusInFirebase","setComplete","handleUserInput","e","target","value","handleEditTodo","update","editTodoContentInFirebase","editTodo","className","Card","TextareaAutosize","aria-label","rowsMin","autoFocus","onChange","onBlur","Button","variant","onMouseDown","CardContent","IconButton","onClick","Typography","gutterBottom","theme","spacing","FormContainer","TextField","AddButton","setTodoContent","placeholder","Fab","size","Date","now","addTodoToFirebase","addTodo","App","this","props","key","Component","todoArray","Object","values","then","fetchState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf832fa2.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport reducer from './reducer';\nexport default combineReducers({\n reducer\n});\n","import {v4} from 'node-uuid';\n\nconst testState = {\n  notCompleted:[\n    {id:\"0\", content:\"sleep\"},\n    {id:\"1\", content:\"study\"},\n    {id:\"2\", content:\"eat\"},\n  ],\n  completed: [\n    {id:\"3\", content:\"sleep\"},\n    {id:\"4\", content:\"study\"},\n    {id:\"5\", content:\"eat\"},\n  ]\n}\n\nconst findIndex = (list,ID) => {\n  for( var i=0;i<list.length;i++) {\n    if(list[i].id===ID) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport default (state = {notCompleted:[],completed:[],userId: v4()}, action) => {\n switch (action.type) {\n  case 'ADD_TODO':\n    const newTodo = {id:action.payload.todoID,content:action.payload.todoContent};\n    const newNotCompletedList = [...state.notCompleted,newTodo];\n    return {...state,notCompleted:newNotCompletedList};\n\n  case 'DELETE_TODO':\n    let index;\n    //find list to delete\n    let listToDelete = action.payload.completed ? state.completed : state.notCompleted;\n    let afterDeleteTodo = listToDelete.map((todo,i) => {\n      if(todo.id===action.payload.todoID) {\n        index=i;\n      }\n      return todo;\n    });\n    afterDeleteTodo.splice(index,1);\n    if(action.payload.completed) {\n      return {...state,completed:afterDeleteTodo};\n    } else {\n      return {...state,notCompleted:afterDeleteTodo};\n    }\n\n  case 'SET_COMPLETE':\n  let listToRemove,listToAdd;\n  if(action.payload.newCompleteStatus) {\n    listToRemove = state.notCompleted;\n    listToAdd = state.completed;\n  } else {\n    listToRemove = state.completed;\n    listToAdd = state.notCompleted;\n  }\n  let ind;\n  listToRemove = listToRemove.map((todo,i)=> {\n    if(todo.id===action.payload.todoID) {\n      ind=i;\n    }\n    return todo;\n  })\n  let todo = listToRemove.splice(ind,1);\n  listToAdd = [...listToAdd,todo[0]]\n  if(action.payload.newCompleteStatus) {\n    return {...state,completed:listToAdd,notCompleted:listToRemove};\n  } else {\n    return {...state,completed:listToRemove,notCompleted:listToAdd};\n  }\n\n  case 'EDIT_TODO':\n    const {todoID,completeStatus,newContent} = action.payload;\n    let listToEdit = state.notCompleted;\n    if(completeStatus) {\n      listToEdit = state.completed;\n    }\n    let editIndex;\n    listToEdit = listToEdit.map((todo,i) => {\n      if(todo.id===todoID) {\n        editIndex=i;\n      }\n      return todo;\n    })\n    listToEdit[editIndex].content = newContent;\n\n    if(!completeStatus) {\n      return {...state,notCompleted:listToEdit};\n    } else {\n      return {...state,completed:listToEdit};\n    }\n\n  case 'FETCH_STATE':\n    console.log(action.payload);\n    return action.payload;\n\n  default:\n   return state\n }\n}\n","import {createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from '../reducer';\nimport {loadState,saveState} from '../config/localStorage';\nimport throttle from 'lodash/throttle';\n\n//Since this uses the database in firebase so i commented the localStorage part\n\n//const persistedState = loadState();\nexport const store = createStore(rootReducer,applyMiddleware(thunkMiddleware));\n\n\n\n// export const store = createStore(rootReducer,persistedState, applyMiddleware(thunkMiddleware))\n// //export default store;\n// store.subscribe(throttle(()=> {\n//   saveState(store.getState());\n// },1000));\n","import firebase from 'firebase';\nimport {v4} from 'node-uuid';\nconst config = {\n    apiKey: \"AIzaSyBXcODWkpEcUDrysnHHBFUEcFN27UkvUYE\",\n    authDomain: \"todo-app-react-d63f8.firebaseapp.com\",\n    databaseURL: \"https://todo-app-react-d63f8.firebaseio.com\",\n    projectId: \"todo-app-react-d63f8\",\n    storageBucket: \"todo-app-react-d63f8.appspot.com\",\n    messagingSenderId: \"694457276641\",\n    appId: \"1:694457276641:web:a5fccf38ecfd2649f7bfa0\",\n    measurementId: \"G-TXD87QFSWV\"\n  };\nfirebase.initializeApp(config);\nconst database = firebase.database();\n\nexport const addTodoToFirebase = (content) => {\n  //this will give us a unique id for our tasks\n  const id = Date.now();\n  database.ref(`/notCompleted/${id}`).set({\n    content,id\n  })\n  return id;\n}\n\nexport const deleteTodoFromFirebase = (todoID,completed) => {\n    if(completed) {\n      database.ref(`/completed/${todoID}`).remove();\n    } else {\n      database.ref(`/notCompleted/${todoID}`).remove();\n    }\n}\n\nexport const editTodoContentInFirebase = (todoID,completeStatus,newContent) => {\n    const ref = completeStatus ? \"completed\":\"notCompleted\";\n    database.ref(`/${ref}/${todoID}`).update({content:newContent});\n}\n\nexport const changeCompleteStatusInFirebase = (todoID,newCompleteStatus) => {\n  //decide which list to move from and to\n\n  const from = newCompleteStatus ? \"notCompleted\":\"completed\";\n  const to = newCompleteStatus ? \"completed\":\"notCompleted\";\n  const oldRef = database.ref(`/${from}/${todoID}`);\n  const newRef = database.ref(`/${to}/${todoID}`);\n\n  oldRef.once('value', function(snap)  {\n        newRef.set( snap.val(), function(error) {\n             if( !error ) {  oldRef.remove(); }\n             else if( typeof(console) !== 'undefined' && console.error ) {  console.error(error); }\n        });\n   });\n}\n\n\nexport default database;\n","import database from '../config/firebase';\nimport thunkMiddleware from 'redux-thunk';\nimport {moveFbRecord}  from '../config/firebase';\n\nexport const fetchState = state => {\n    return {\n      type: \"FETCH_STATE\",\n      payload: state,\n    };\n  }\n\n/**\n * THUNKS\n */\n //map state from firebase\nexport function getStateThunk() {\n  return dispatch => {\n    const state = {completed:[],notCompleted:[]};\n    const ref = database.ref('/');\n    database.ref(`/`).once('value', snap => {\n          const value = snap.val();\n          if(value.completed) {\n            const todoArray=Object.values(value.completed);\n            state.completed = todoArray;\n          }\n          if(value.notCompleted) {\n            const todoArray=Object.values(value.notCompleted);\n            state.notCompleted = todoArray;\n          }\n      })\n    .then(() => dispatch(fetchState(state)))\n  }\n}\n\n\nexport const addTodo = (todoContent,todoID) => {\n  return {\n    type:'ADD_TODO',\n    payload:{todoContent,todoID}\n  }\n}\n\nexport const deleteTodo = (todoID,completed) => dispatch => {\n  dispatch({\n    type: 'DELETE_TODO',\n    payload: {todoID,completed}\n  })\n}\n\nexport const setComplete = (todoID,newCompleteStatus) => dispatch => {\n  dispatch({\n    type: 'SET_COMPLETE',\n    payload: {todoID,newCompleteStatus}\n  })\n}\n\nexport const editTodo = (todoID,completeStatus,newContent) => dispatch => {\n  dispatch({\n    type: 'EDIT_TODO',\n    payload: {todoID,completeStatus,newContent}\n  })\n}\n","import React, { Component, useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {deleteTodo, setComplete,editTodo} from '../actions/action';\nimport {deleteTodoFromFirebase,editTodoContentInFirebase, changeCompleteStatusInFirebase} from '../config/firebase';\nimport { connect } from 'react-redux';\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles({\n  cardContainer: {\n    margin: '0 0 8px 0',\n    position: 'relative',\n    maxWidth: '100%',\n    wordWrap: 'break-word',\n  },\n  EditIcon: {\n    position: 'absolute',\n    right: '50px',\n    bottom: '5px',\n    opacity: '0.5'\n  },\n  DeleteIcon: {\n    position: 'absolute',\n    right: '5px',\n    bottom: '5px',\n    opacity: '0.5'\n  },\n  CompleteIcon: {\n    position: 'absolute',\n    right: '95px',\n    bottom: '5px',\n    color: 'red'\n  },\n  Content: {\n    marginTop: 'auto',\n    marginBottom: 'auto',\n  },\n  CompletedContent: {\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    textDecoration: 'line-through'\n  },\n  EditForm: {\n    resize: 'none',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    outline: 'none',\n    border: 'none'\n  },\n  EditFormContainer: {\n    width: '100%',\n    marginBottom: '5px'\n  },\n  EditFormCard: {\n    minHeight: '50px',\n    padding: '6px 8px 2px'\n  },\n  SaveButton: {\n    margin: '10px 0 10px'\n  }\n});\n\nconst Todo = ({todoID,content,completed,dispatch}) => {\n  const classes = useStyles();\n  const [isEditing,setIsEditing] = useState(false);\n  const [todoText,setText] = useState(content);\n\n  const handleDeleteTodo = () => {\n    deleteTodoFromFirebase(todoID,completed);\n    dispatch(deleteTodo(todoID,completed));\n  }\n\n  const handleSetCompleted = () => {\n    changeCompleteStatusInFirebase(todoID,!completed);\n    dispatch(setComplete(todoID,!completed));\n  }\n\n  const handleUserInput = (e) => {\n    setText(e.target.value);\n  }\n\n  const handleEditTodo = () => {\n    setIsEditing(false);\n    editTodoContentInFirebase(todoID,completed,todoText);\n    dispatch(editTodo(todoID,completed,todoText));\n  }\n\n  const RenderEdit = () => {\n    return (\n      <div className={classes.EditFormContainer}>\n        <Card className={classes.EditFormCard} >\n            <TextareaAutosize aria-label=\"minimum height\" className={classes.EditForm}\n            rowsMin={1}\n            value={todoText}\n            autoFocus\n            onChange={handleUserInput}\n            onBlur={()=>setIsEditing(false)}/>\n        </Card>\n        <Button variant=\"outlined\" color=\"secondary\" onMouseDown={handleEditTodo} className={classes.SaveButton} >\n          Save\n        </Button>\n      </div>\n    )\n  }\n\n  const RenderTodo = () => {\n    return (\n        <div className={classes.cardContainer}>\n          <Card>\n            <CardContent>\n              <IconButton aria-label=\"delete\" className={classes.EditIcon} onClick={()=>setIsEditing(true)}>\n                <EditIcon />\n              </IconButton>\n              <IconButton aria-label=\"delete\" onClick={handleDeleteTodo} className={classes.DeleteIcon}>\n                <DeleteIcon />\n              </IconButton>\n              {\n                completed ?\n                (<IconButton aria-label=\"delete\" onClick={handleSetCompleted} className={classes.CompleteIcon}>\n                  <CheckCircleRoundedIcon />\n                </IconButton>)\n                :\n                (<IconButton aria-label=\"delete\" onClick={handleSetCompleted} className={classes.CompleteIcon}>\n                  <CheckCircleOutlineRoundedIcon />\n                </IconButton>\n              )}\n              <Typography  gutterBottom className={completed ? classes.CompletedContent : classes.Content}>\n                {content}\n              </Typography>\n            </CardContent>\n          </Card>\n        </div>\n    )\n  }\n\n  return isEditing ? RenderEdit() : RenderTodo();\n\n}\nexport default connect()(Todo);\n","import React, { Component, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport {addTodo} from '../actions/action';\nimport {addTodoToFirebase} from '../config/firebase';\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  FormContainer: {\n    width:'100%',\n    marginBottom: '20px',\n\n  },\n  TextField: {\n    margin: '10px 10px 20px 100px',\n    width: '470px'\n  },\n  AddButton: {\n  }\n}));\n\nconst AddTodoForm = ({dispatch}) => {\n  const classes = useStyles();\n  const [todoContent,setTodoContent] = useState(\"\");\n  const handleUserInput = (e) => {\n    setTodoContent(e.target.value);\n  }\n  const writeTodo = () =>\n  {\n    if(todoContent) {\n      const todoID = addTodoToFirebase(todoContent);\n      dispatch(addTodo(todoContent,todoID));\n      setTodoContent(\"\");\n    }\n  }\n  return (\n      <div className={classes.FormContainer}>\n        <TextField id=\"filled-basic\" className={classes.TextField} placeholder=\"Write a new note...\" value={todoContent} onChange={handleUserInput} />\n        <Fab size=\"medium\" color=\"secondary\" aria-label=\"add\" className={classes.margin} className={classes.AddButton} onClick={writeTodo}>\n          <AddIcon />\n        </Fab>\n      </div>\n  );\n}\nexport default connect()(AddTodoForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getStateThunk} from '../actions/action';\nimport Todo from './Todo';\nimport AddTodoForm from './AddTodoForm';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../App.css';\n\n\n\nclass App extends Component {\n\n  render() {\n    const {notCompleted,completed,userId} = this.props;\n    return (\n      <div>\n        <div className=\"App\">\n          <div className=\"header\">\n            <h1 className=\"App-title\">Todo list</h1>\n          </div>\n          <AddTodoForm/>\n          <div className=\"todos-body\">\n            <div className=\"todos-container\">\n              {notCompleted.map((todo,index) =>\n                <Todo todoID={todo.id} key={todo.id} content={todo.content} completed={false}/>\n              )}\n            </div>\n            <div className=\"divider\">\n            </div>\n            <div className=\"todos-container\">\n              {completed.map((todo,index) =>\n                <Todo todoID={todo.id} key={todo.id} content={todo.content} completed={true}/>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n * mapDispatchToProps\n*/\nconst mapDispatchToProps = dispatch => {\n  dispatch(getStateThunk())\n  return {\n    dispatch,\n  }\n}\n\n/*\n * mapStateToProps\n*/\nconst mapStateToProps = state => ({\n  notCompleted: state.reducer.notCompleted,\n  completed: state.reducer.completed,\n  userId:state.userId\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport './index.css';\nimport App from './components/App';\nimport {store} from './store';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n <Provider store={store}>\n  <App />\n </Provider>,\n document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}